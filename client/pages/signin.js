import React, { useState } from "react";
import Head from "next/head";
import Link from "next/link";
import IntlMessages from "../service/react-intl/IntlMessages";
import GetTranslateText from "../service/react-intl/getTranslateText";
import { useSelector, useDispatch } from "react-redux";
import { LoadingScreen, LoadingMinimal } from "../components/loading";
import AuthPage from "../service/auth/auth-page-wrappers/AuthPage";
import InputWithLabel from "../components/input";
import Image from "next/image";
import Authentification from "../public/asset/authentification.svg";

import { useAuth } from "../service/auth/";

import { BsFacebook } from "react-icons/bs";
import { FcGoogle } from "react-icons/fc";

function Alert({ type = "warning", message }) {
  switch (type) {
    case "success":
      var alertType = "alert-success";
      break;
    case "error":
      var alertType = "alert-error";
      break;
    default:
      var alertType = "alert-info";
  }
  return (
    <div className={`absolute w-fit z-100 float-end top-0 right-5 top-5`}>
      <div
        className={`alert ${alertType} h-10 rounded-md p-2 text-sm text-base-100`}
      >
        <div>
          <span>{message}</span>
        </div>
      </div>
    </div>
  );
}

export default function Home() {
  const clientConfig = useSelector((state) => state);
  const { userLogin } = useAuth();
  var data = [
    {
      id: "email",
      label: GetTranslateText("main.login.label.email"),
      alt: GetTranslateText("main.login.label.email.alt"),
      type: "text",
      placeHolder: "example@example.com",
      value: "",
      isValidate: false,
      check: "email",
    },
    {
      id: "password",
      label: GetTranslateText("main.login.label.password"),
      alt: GetTranslateText("main.login.label.password.alt"),
      type: "password",
      placeHolder: "",
      value: "",
      isValidate: false,
      check: "password",
    },
  ];

  const onSignin = () => {
    {
      const email = data[0].value;
      const password = data[1].value;
      userLogin({ email, password }, true);
    }
  };

  return (
    <AuthPage>
      <Head>
        <title>{`${GetTranslateText("app.name")} | ${GetTranslateText(
          "main.login.title"
        )}`}</title>
        <meta name="description" content="Generated by AiT Studio" />
        <link rel="icon" href="/logo_meowmeow.ico" />
      </Head>
      <div className="flex justify-center bg-primary w-full h-full">
        <div className="container bg-white mx-auto my-auto w-11/12 h-fit md:w-3/4  shadow-md max-w-5xl rounded-md">
          <div className="grid md:grid-cols-2 h-full w-full ">
            <div className="hidden md:grid h-full bg-secondary max-h-md">
              <div className="w-fit mx-auto my-auto hidden md:block h-fit">
                <Image src={Authentification} alt="img" />
              </div>
            </div>
            <div className="w-full py-16 md:py-10 px-10 md:mx-auto md:my-auto">
              <p className="text-3xl font-bold mb-5">
                <IntlMessages id="main.login.label.login" />
              </p>
              <div className="grid justify-items-center">
                {data.map((value) => {
                  return <InputWithLabel data={value} key={value.id} />;
                })}
                <button
                  className="btn btn-primary btn-md mt-5 float-right normal-case w-full text-white"
                  onClick={onSignin}
                >
                  <IntlMessages id="main.login.label.login.button" />
                </button>
                <Link
                  className="cursor-pointer text-sm text-primary text-center font-bold w-full mt-3"
                  href="/"
                >
                  <IntlMessages id="main.login.label.forgetPassword" />
                </Link>
                
                <Link
                  className="cursor-pointer text-sm text-primary text-center font-bold w-full mt-3"
                  href="/register"
                >
                  <IntlMessages id="main.login.label.newAccount" />
                </Link>
              </div>
            </div>
          </div>
        </div>
      </div>
    </AuthPage>
  );
}
